{
  "rules": {
    "jobs": {
      ".read": true,
      ".indexOn": ["createdAt", "userId", "category", "title"],
      "$jobId": {
        ".read": true,
        ".write": "auth != null && ((!data.exists() || data.child('userId').val() === auth.uid) || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        ".validate": "newData.hasChildren(['title', 'company', 'description', 'location', 'type', 'category', 'userId', 'createdAt'])",
        "userId": {
          ".validate": "newData.val() === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'"
        }
      }
    },
    "favorites": {
      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        ".write": "auth != null && auth.uid === $uid",
        "$jobId": {
          ".validate": "newData.hasChildren(['id', 'title', 'addedAt'])",
          "id": {
            ".validate": "newData.isString()"
          },
          "title": {
            ".validate": "newData.isString()"
          },
          "addedAt": {
            ".validate": "newData.isNumber()"
          }
        }
      }
    },
    "users": {
      ".read": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin'",
      "$uid": {
        ".read": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'",
        ".write": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'admin'",
        ".validate": "newData.hasChildren(['email', 'createdAt'])",
        "role": {
          ".validate": "!data.exists() || auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin'"
        }
      }
    },
    "scraper_logs": {
      ".read": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin'",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin'",
      "$logId": {
        ".validate": "newData.hasChildren(['timestamp', 'action', 'status'])"
      }
    },
    "admin_settings": {
      ".read": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin'",
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'admin'"
    }
  }
}