import React, { useEffect, useState } from 'react';
import { useParams, useLocation } from 'react-router-dom';
import { SearchHero } from '../components/home/SearchHero';
import { JobList } from '../components/home/JobList';
import { JobFilters } from '../components/home/JobFilters';
import { FavoriteJobs } from '../components/home/FavoriteJobs';
import { SEOJobContent } from '../components/job/SEOJobContent';
import { useJobs } from '../hooks/useJobs';
import { useJobFilters } from '../hooks/useJobFilters';
import { jobCategories } from '../data/jobCategories';
import { useAuthContext } from '../contexts/AuthContext';
import { generateMetaTags } from '../utils/seoUtils';
import { checkJobDates } from '../utils/dateUtils';
import { Heart, Filter } from 'lucide-react';
import toast from 'react-hot-toast';

export function HomePage() {
  const { user } = useAuthContext();
  const { pageNumber } = useParams();
  const location = useLocation();
  const [searchTerm, setSearchTerm] = useState('');
  const { jobs, categories, loading, error, refetchJobs } = useJobs(undefined, searchTerm, 40);
  const { filters, updateFilters, filteredJobs } = useJobFilters(jobs);

  useEffect(() => {
    // SEO meta tags
    generateMetaTags({
      title: 'Ä°ÅŸ Ä°lanlarÄ± 2025 - Ä°stanbul Ankara Ä°zmir GÃ¼ncel Ä°ÅŸ FÄ±rsatlarÄ±',
      description: 'TÃ¼rkiye\'nin en gÃ¼ncel iÅŸ ilanlarÄ± sitesi! Ä°stanbul, Ankara, Ä°zmir\'de mÃ¼hendis, garson, kurye, resepsiyon gÃ¶revlisi, aÅŸÃ§Ä± yardÄ±mcÄ±sÄ±, Ã¶zel gÃ¼venlik pozisyonlarÄ±. Ãœcretsiz CV oluÅŸtur, hemen baÅŸvur. 2025 kariyer fÄ±rsatlarÄ± burada!',
      keywords: [
        'iÅŸ ilanlarÄ±', 'istanbul iÅŸ ilanlarÄ±', 'ankara iÅŸ ilanlarÄ±', 'izmir iÅŸ ilanlarÄ±',
        'mÃ¼hendis iÅŸ ilanlarÄ±', 'garson iÅŸ ilanlarÄ±', 'kurye iÅŸ ilanlarÄ±', 
        'resepsiyon gÃ¶revlisi iÅŸ ilanlarÄ±', 'aÅŸÃ§Ä± yardÄ±mcÄ±sÄ± iÅŸ ilanlarÄ±', 'Ã¶zel gÃ¼venlik iÅŸ ilanlarÄ±',
        'gÃ¼ncel iÅŸ ilanlarÄ±', 'yeni iÅŸ ilanlarÄ±', 'part time iÅŸ ilanlarÄ±', 'tam zamanlÄ± iÅŸ ilanlarÄ±',
        'uzaktan Ã§alÄ±ÅŸma iÅŸ ilanlarÄ±', 'freelance iÅŸ ilanlarÄ±', 'home office iÅŸ ilanlarÄ±',
        'iÅŸ ara', 'iÅŸ bul', 'kariyer fÄ±rsatlarÄ±', 'iÅŸ baÅŸvurusu', 'cv oluÅŸtur', 'Ã¼cretsiz cv',
        'Ã¶zgeÃ§miÅŸ hazÄ±rlama', 'iÅŸ arama sitesi', 'eleman.net', 'kariyer.net', 'secretcv',
        'yenibiris', 'sahibinden iÅŸ ilanlarÄ±', 'iÅŸkur iÅŸ ilanlarÄ±', 'online iÅŸ baÅŸvurusu'
      ],
      url: window.location.pathname
    });

    // Yeni ilan oluÅŸturulduÄŸunda bildirim gÃ¶ster
    if (location.state?.newJobCreated) {
      toast.success('ðŸŽ‰ Ä°lanÄ±nÄ±z baÅŸarÄ±yla yayÄ±nlandÄ± ve en Ã¼stte gÃ¶rÃ¼nÃ¼yor!', {
        duration: 4000,
        position: 'top-center',
        style: {
          background: '#10B981',
          color: '#FFFFFF',
          padding: '16px',
          borderRadius: '8px',
          fontSize: '16px',
          fontWeight: '500'
        },
        icon: 'ðŸš€'
      });
      
      // State'i temizle
      window.history.replaceState({}, document.title);
    }

    // Scroll pozisyonunu geri yÃ¼kle
    const scrollPosition = sessionStorage.getItem('scrollPosition');
    const previousPath = sessionStorage.getItem('previousPath');
    
    if (scrollPosition && previousPath && previousPath.includes(window.location.pathname)) {
      setTimeout(() => {
        window.scrollTo(0, parseInt(scrollPosition));
        sessionStorage.removeItem('scrollPosition');
        sessionStorage.removeItem('previousPath');
      }, 100);
    } else if (location.state?.scrollToTop) {
      window.scrollTo({ top: 0, behavior: 'smooth' });
    }

    // Debug: Ä°lan tarihlerini kontrol et
    if (jobs.length > 0) {
      checkJobDates(jobs);
    }
  }, [pageNumber, location.state, jobs]);

  const getCategoryName = (categoryId: string) => {
    const category = jobCategories.find(c => c.id === categoryId);
    return category ? `${category.name} Ä°lanlarÄ±` : 'TÃ¼m Ä°lanlar';
  };

  return (
    <div className="space-y-8">
      <SearchHero
        onSearch={setSearchTerm}
        onLocationChange={(city) => updateFilters({ city })}
        onCategorySelect={(category) => updateFilters({ category, subCategory: '' })}
        availableCategories={categories}
      />

      <div className="grid grid-cols-1 lg:grid-cols-12 gap-8">
        {/* Left Sidebar */}
        <div className="lg:col-span-3 space-y-6">
          <JobFilters
            filters={filters}
            onFilterChange={updateFilters}
            availableCategories={categories}
          />
        </div>

        {/* Main Content */}
        <div className="lg:col-span-9">
          <div className="mb-6 flex justify-between items-center">
            <h2 className="text-2xl font-bold">
              {filters.category ? getCategoryName(filters.category) : 'TÃ¼m Ä°lanlar'}
            </h2>
            <div className="text-sm text-gray-500">
              {filteredJobs.length} ilan bulundu
            </div>
          </div>

          {loading ? (
            <div className="text-center py-8">
              <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto" />
              <p className="mt-4 text-gray-600">Ä°lanlar yÃ¼kleniyor...</p>
            </div>
          ) : error ? (
            <div className="text-center py-8 text-red-600">{error}</div>
          ) : (
            <JobList jobs={filteredJobs} onJobDeleted={refetchJobs} />
          )}
        </div>
      </div>

      {/* SEO Content */}
      <SEOJobContent />
    </div>
  );
}